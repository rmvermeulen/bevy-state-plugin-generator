---
source: src/generate/tests.rs
expression: "generate_all_type_definitions(&node, (source, scheme).into())"
---
#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Game = Game::Menu)]
pub enum GameMenu { #[default] Main, Options, Continue }

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Menu = Menu::Main)]
pub struct MenuMain;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Menu = Menu::Options)]
pub enum MenuOptions { #[default] Graphics, Audio, Gameplay }

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Options = Options::Graphics)]
pub struct OptionsGraphics;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Options = Options::Audio)]
pub struct OptionsAudio;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Options = Options::Gameplay)]
pub struct OptionsGameplay;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Menu = Menu::Continue)]
pub enum MenuContinue { #[default] Save, Load }

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Continue = Continue::Save)]
pub struct ContinueSave;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Continue = Continue::Load)]
pub struct ContinueLoad;
