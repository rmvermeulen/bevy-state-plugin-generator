---
source: src/generate/tests.rs
expression: source
---
use bevy::prelude::AppExtStates;
#[allow(missing_docs)]
pub mod states {
    use bevy::prelude::StateSet;
    #[derive(bevy::prelude::States, Hash, Default, Debug, Clone, PartialEq, Eq)]
pub struct GameState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::GameState)]
pub enum GameState {
    #[default]
    Loading,
      Ready
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::Loading)]
pub struct Loading;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::Ready)]
pub enum Ready {
    #[default]
    Menu,
      Game
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Ready = Ready::Menu)]
pub enum Menu {
    #[default]
    Main,
      Options
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Ready = Ready::Game)]
pub enum Game {
    #[default]
    Playing,
      Paused,
      GameOver
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Menu = Menu::Main)]
pub struct Main;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Menu = Menu::Options)]
pub struct Options;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Game = Game::Playing)]
pub struct Playing;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Game = Game::Paused)]
pub struct Paused;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(Game = Game::GameOver)]
pub struct GameOver;

}
pub struct GeneratedStatesPlugin;
impl bevy::app::Plugin for GeneratedStatesPlugin {
    fn build(&self, app: &mut bevy::app::App) {
        app.init_state::<states::GameState>().add_sub_state::<states::GameState>()
            .add_sub_state::<states::GameStateLoading>()
            .add_sub_state::<states::GameStateReady>()
            .add_sub_state::<states::GameStateReadyMenu>()
            .add_sub_state::<states::GameStateReadyGame>()
            .add_sub_state::<states::GameStateReadyMenuMain>()
            .add_sub_state::<states::GameStateReadyMenuOptions>()
            .add_sub_state::<states::GameStateReadyGamePlaying>()
            .add_sub_state::<states::GameStateReadyGamePaused>()
            .add_sub_state::<states::GameStateReadyGameGameOver>();
    }
}
