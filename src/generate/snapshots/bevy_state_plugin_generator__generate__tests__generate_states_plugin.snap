---
source: src/generate/tests.rs
expression: source
---
use bevy::prelude::AppExtStates;
#[allow(missing_docs)]
pub mod states {
    use bevy::prelude::StateSet;
    #[derive(bevy::prelude::States, Hash, Default, Debug, Clone, PartialEq, Eq)]
pub enum GameState {
    #[default]
    GameState
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::GameState)]
pub enum GameStateGameState {
    #[default]
    Loading,
      Ready
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameState = GameStateGameState::Loading)]
pub struct GameStateGameStateLoading;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameState = GameStateGameState::Ready)]
pub enum GameStateGameStateReady {
    #[default]
    Menu,
      Game
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReady = GameStateGameStateReady::Menu)]
pub enum GameStateGameStateReadyMenu {
    #[default]
    Main,
      Options
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReady = GameStateGameStateReady::Game)]
pub enum GameStateGameStateReadyGame {
    #[default]
    Playing,
      Paused,
      GameOver
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReadyMenu = GameStateGameStateReadyMenu::Main)]
pub struct GameStateGameStateReadyMenuMain;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReadyMenu = GameStateGameStateReadyMenu::Options)]
pub struct GameStateGameStateReadyMenuOptions;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReadyGame = GameStateGameStateReadyGame::Playing)]
pub struct GameStateGameStateReadyGamePlaying;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReadyGame = GameStateGameStateReadyGame::Paused)]
pub struct GameStateGameStateReadyGamePaused;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameStateGameStateReadyGame = GameStateGameStateReadyGame::GameOver)]
pub struct GameStateGameStateReadyGameGameOver;

}
pub struct GeneratedStatesPlugin;
impl bevy::app::Plugin for GeneratedStatesPlugin {
    fn build(&self, app: &mut bevy::app::App) {
        app.init_state::<states::GameState>().add_sub_state::<states::GameStateGameState>()
            .add_sub_state::<states::GameStateGameStateLoading>()
            .add_sub_state::<states::GameStateGameStateReady>()
            .add_sub_state::<states::GameStateGameStateReadyMenu>()
            .add_sub_state::<states::GameStateGameStateReadyGame>()
            .add_sub_state::<states::GameStateGameStateReadyMenuMain>()
            .add_sub_state::<states::GameStateGameStateReadyMenuOptions>()
            .add_sub_state::<states::GameStateGameStateReadyGamePlaying>()
            .add_sub_state::<states::GameStateGameStateReadyGamePaused>()
            .add_sub_state::<states::GameStateGameStateReadyGameGameOver>();
    }
}
