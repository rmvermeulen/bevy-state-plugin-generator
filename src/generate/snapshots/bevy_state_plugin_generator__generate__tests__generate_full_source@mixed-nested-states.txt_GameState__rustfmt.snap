---
source: src/generate/tests.rs
expression: "generate_state_plugin_source(source, config, Some(src_path)).unwrap()"
---
// generated by bevy_state_plugin_generator v[CARGO_PKG_VERSION]
// src: mixed-nested-states.txt
// A { B [C] } D { E F [ G H ] I }

use bevy::prelude::AppExtStates;
#[allow(missing_docs)]
pub mod states {
    use bevy::prelude::StateSet;
    #[derive(bevy::prelude::States, Hash, Default, Debug, Clone, PartialEq, Eq)]
    pub enum GameState {
        #[default]
        A,
        D,
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameState = GameState::A)]
    pub enum GameStateA {
        #[default]
        B,
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameState = GameState::D)]
    pub enum GameStateD {
        #[default]
        E,
        F,
        I,
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateA = GameStateA::B)]
    pub struct GameStateAB;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateD = GameStateD::E)]
    pub struct GameStateDE;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateD = GameStateD::F)]
    pub struct GameStateDF;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateD = GameStateD::I)]
    pub struct GameStateDI;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateAB = GameStateAB::C)]
    pub struct GameStateABC;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateDF = GameStateDF::G)]
    pub struct GameStateDFG;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameStateDF = GameStateDF::H)]
    pub struct GameStateDFH;
}
pub struct GeneratedStatesPlugin;
impl bevy::app::Plugin for GeneratedStatesPlugin {
    fn build(&self, app: &mut bevy::app::App) {
        app.init_state::<states::GameState>()
            .add_sub_state::<states::GameStateA>()
            .add_sub_state::<states::GameStateD>()
            .add_sub_state::<states::GameStateAB>()
            .add_sub_state::<states::GameStateDE>()
            .add_sub_state::<states::GameStateDF>()
            .add_sub_state::<states::GameStateDI>()
            .add_sub_state::<states::GameStateABC>()
            .add_sub_state::<states::GameStateDFG>()
            .add_sub_state::<states::GameStateDFH>();
    }
}
