---
source: src/generator/tests.rs
expression: "generate_state_plugin_source(src_path, source, PluginConfig\n{ scheme, ..Default::default() }).unwrap_or_else(identity)"
---
// generated by bevy_state_plugin_generator vCARGO_PKG_VERSION
// src: root.txt
// RootState

#![allow(missing_docs)]
use bevy::prelude::AppExtStates;
pub mod states {
    use bevy::prelude::StateSet;
    #[derive(bevy::prelude::States, Hash, Default, Debug, Clone, PartialEq, Eq)]
    pub enum GameState {
        #[default]
        RootState,
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameState = GameState::RootState)]
    pub struct GameStateRootState;
}
pub struct GeneratedStatesPlugin;
impl bevy::app::Plugin for GeneratedStatesPlugin {
    fn build(&self, app: &mut bevy::app::App) {
        app.init_state::<states::GameState>()
            .add_sub_state::<states::GameStateRootState>();
    }
}
