---
source: src/generator/tests.rs
expression: "generate_plugin_source(Rc::new(states), Default::default())"
---
#![allow(missing_docs)]
use bevy::prelude::AppExtStates;
pub mod states {
    use bevy::prelude::StateSet;
    #[derive(bevy::prelude::States, Hash, Default, Debug, Clone, PartialEq, Eq)]
    pub enum GameState {
        #[default]
        Loading,
          Ready
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameState = GameState::Loading)]
    pub struct GameLoading;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameState = GameState::Ready)]
    pub enum GameReadyState {
        #[default]
        Menu,
          Game
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReady = GameReady::Menu)]
    pub enum GameReadyMenuState {
        #[default]
        Main,
          Options
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReadyMenu = GameReadyMenu::Main)]
    pub struct GameReadyMenuMain;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReadyMenu = GameReadyMenu::Options)]
    pub struct GameReadyMenuOptions;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReady = GameReady::Game)]
    pub enum GameReadyGameState {
        #[default]
        Playing,
          Paused,
          GameOver
    }

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReadyGame = GameReadyGame::Playing)]
    pub struct GameReadyGamePlaying;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReadyGame = GameReadyGame::Paused)]
    pub struct GameReadyGamePaused;

    #[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
    #[source(GameReadyGame = GameReadyGame::GameOver)]
    pub struct GameReadyGameGameOver;
}
pub struct GeneratedStatesPlugin;
impl bevy::app::Plugin for GeneratedStatesPlugin {
    fn build(&self, app: &mut bevy::app::App) { 
        app.init_state::<states::GameState>()
            .add_sub_state::<states::GameLoading>()
            .add_sub_state::<states::GameReady>()
            .add_sub_state::<states::GameReadyMenu>()
            .add_sub_state::<states::GameReadyMenuMain>()
            .add_sub_state::<states::GameReadyMenuOptions>()
            .add_sub_state::<states::GameReadyGame>()
            .add_sub_state::<states::GameReadyGamePlaying>()
            .add_sub_state::<states::GameReadyGamePaused>()
            .add_sub_state::<states::GameReadyGameGameOver>()
        ;
    }
}
