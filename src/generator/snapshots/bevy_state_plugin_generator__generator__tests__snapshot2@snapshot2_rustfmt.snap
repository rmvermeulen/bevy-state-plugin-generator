---
source: src/generator/tests.rs
expression: "generate_all_type_definitions(&StateNode::enumeration(\"Alpha\",\n[StateNode::singleton(\"Beta\")]),\n(ParentState::new(\"GameState\", \"Alpha\"), NamingScheme::Full).into())"
---
#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::Alpha)]
pub enum GameAlphaState {
    #[default]
    Beta
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameAlpha = GameAlpha::Beta)]
pub struct GameAlphaBeta;
