---
source: src/generator/tests.rs
expression: "generate_all_type_definitions(&node, (source, naming_scheme).into())"
---
#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(GameState = GameState::Menu)]
pub enum GameMenuState {
    #[default]
    Main,
      Options,
      Continue
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(MenuState = MenuState::Main)]
pub struct MenuMainState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(MenuState = MenuState::Options)]
pub enum MenuOptionsState {
    #[default]
    Graphics,
      Audio,
      Gameplay
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(OptionsState = OptionsState::Graphics)]
pub struct OptionsGraphicsState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(OptionsState = OptionsState::Audio)]
pub struct OptionsAudioState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(OptionsState = OptionsState::Gameplay)]
pub struct OptionsGameplayState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(MenuState = MenuState::Continue)]
pub enum MenuContinueState {
    #[default]
    Save,
      Load
}

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(ContinueState = ContinueState::Save)]
pub struct ContinueSaveState;

#[derive(bevy::prelude::SubStates, Hash, Default, Debug, Clone, PartialEq, Eq)]
#[source(ContinueState = ContinueState::Load)]
pub struct ContinueLoadState;
